"""
CTRE Phoenix5 plugin
"""
from __future__ import annotations
from . import ErrorCode
__all__ = ['ErrorCode', 'TalonSRX', 'feed_enable', 'get_error_text', 'set_phoenix_diagnostics_start_time']
class TalonSRX:
    def __init__(self, arg0: int) -> None:
        ...
    def clear_sticky_faults(self, arg0: int) -> int:
        ...
    def config_kI(self, arg0: int, arg1: float, arg2: int) -> int:
        ...
    def config_kP(self, arg0: int, arg1: float, arg2: int) -> int:
        ...
    def get_applied_power(self) -> float:
        ...
    def get_device_id(self) -> int:
        ...
    def get_last_error(self) -> int:
        ...
    def get_position(self) -> float:
        ...
    def get_stator_current(self) -> float:
        ...
    def get_sticky_faults(self) -> int:
        ...
    def get_supply_current(self) -> float:
        ...
    def get_temperature(self) -> float:
        ...
    def is_fwd_limit_switch_closed(self) -> bool:
        ...
    def is_rev_limit_switch_closed(self) -> bool:
        ...
    def set_brake(self, arg0: bool) -> int:
        ...
    def set_position(self, arg0: float) -> int:
        ...
    def set_power(self, arg0: float) -> int:
        ...
def feed_enable(arg0: int) -> None:
    """
    Feed the watchdog
    """
def get_error_text(arg0: int) -> str:
    """
    Return the error text for a given code
    """
def set_phoenix_diagnostics_start_time(arg0: int) -> None:
    """
    Set the delay for starting the diagnostics server
    """
